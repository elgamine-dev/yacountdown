{"version":3,"sources":["app/components/App.jsx","app/initialize.js"],"names":["style","window","getComputedStyle","document","querySelector","mainColor","color","bgColor","backgroundColor","App","createClass","getInitialState","onSetTime","e","preventDefault","duration","parseInt","minutes","value","start","restart","state","setState","startAt","add","finished","val","setInterval","remaining","diff","asSeconds","clearInterval","hideForm","render","display","input","Clock","time","props","blink","seconds","rem","left","isDuration","as","animationName","TwoDigits","aff","module","exports","addEventListener"],"mappings":"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","file":"public/app.js","sourcesContent":["import React from 'react'\nimport moment from 'moment'\nimport PieChart from 'react-simple-pie-chart';\n\nlet style = window.getComputedStyle(document.querySelector('body'))\nconst mainColor = style.color\nconst bgColor = style.backgroundColor\n\nlet App = React.createClass({\n  getInitialState() {\n    return {}\n  },\n  onSetTime(e){\n    e.preventDefault()\n    const duration = parseInt(this.minutes.value, 10)\n    this.start(duration)\n  },\n  restart(){\n    this.start(this.state.duration)\n  },\n  start(duration){\n    this.setState({startAt:moment().add(duration, 'minutes'), duration, finished:false})\n    let val = setInterval(()=>{\n        let remaining = moment.duration(this.state.startAt.diff(moment())) \n        if(remaining.asSeconds() <= 0) {\n\n          clearInterval(val)\n          this.setState({finished:true, remaining: moment.duration(0)})\n        }\n        this.setState({remaining, hideForm:true})\n    },200)\n  },\n  render(){\n    let hideForm = this.state.hideForm || false\n    return (\n      <div>\n        <section className=\"time-setter\" style={{display:hideForm && 'none' || 'block'  }}>\n          <form onSubmit={this.onSetTime}>\n            <input ref={(input)=>{this.minutes = input}} defaultValue=\"3\" />\n            <button>Set</button>\n          </form>\n        </section>\n\n        <Clock time={this.state} restart={this.restart} style={{display:hideForm && 'block' || 'none'  }} />\n      </div>\n    )\n  }\n})\n\n\nlet Clock = React.createClass({\n  render(){\n    const time = this.props.time.remaining\n    let blink = {}, minutes = 0, seconds, rem = 100, left = 0\n\n    if(moment.isDuration(time)){\n      minutes = time.minutes()\n      seconds = time.seconds()\n      rem = time.as('seconds')\n      left = (this.props.time.duration * 60) - time.as('seconds')\n      if(rem<=0) {\n        rem=0;\n        left=100;\n      }\n      if(rem < 10) {\n        blink = {animationName:'blink'}\n      }\n    }\n    return (\n      <section className=\"clock\" style={this.props.style} >\n        <div className=\"clock-svg\">\n          <PieChart slices={[\n            {color: bgColor, value: rem},\n            {color: mainColor, value: left}\n          ]} />\n        </div>\n        <div className=\"clock-remaining\">\n          <div className=\"clock-remaining--inner\" style={blink}>\n          {minutes}:<TwoDigits value={seconds} />\n          <div className=\"clock-restart\" style={{display:this.props.time.finished && 'block' || 'none'}}>\n            <button className=\"inverse\" onClick={()=>{this.props.restart()}}>restart</button>\n          </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n})\n\nlet TwoDigits = React.createClass({\n  render(){\n    let aff = !!this.props.value && this.props.value || 0\n    aff = aff >= 10 ? aff : \"0\"+aff\n    return (\n      <span>{aff}</span>\n      )\n  }\n})\n\nmodule.exports = App;","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from 'components/App';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(<App />, document.querySelector('#app'));\n});\n"]}